{"version":3,"sources":["webpack:///./examples/dynamic.js","webpack:///./node_modules/_babel-runtime@6.26.0@babel-runtime/helpers/toConsumableArray.js"],"names":["generateTreeNodes","treeNode","arr","key","props","eventKey","i","push","name","setLeaf","treeData","curKey","level","loopLeaf","data","lev","l","forEach","item","length","indexOf","children","isLeaf","getNewTreeData","child","loop","Demo","state","checkedKeys","onSelect","info","console","log","onCheck","setState","onLoadData","Promise","resolve","setTimeout","map","treeNodes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"examples/dynamic.js","sourcesContent":["/* eslint no-console:0 */\nimport 'rc-tree/assets/index.less';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Tree, { TreeNode } from 'rc-tree';\n\nfunction generateTreeNodes(treeNode) {\n  const arr = [];\n  const key = treeNode.props.eventKey;\n  for (let i = 0; i < 3; i++) {\n    arr.push({ name: `leaf ${key}-${i}`, key: `${key}-${i}` });\n  }\n  return arr;\n}\n\nfunction setLeaf(treeData, curKey, level) {\n  const loopLeaf = (data, lev) => {\n    const l = lev - 1;\n    data.forEach((item) => {\n      if ((item.key.length > curKey.length) ? item.key.indexOf(curKey) !== 0 :\n        curKey.indexOf(item.key) !== 0) {\n        return;\n      }\n      if (item.children) {\n        loopLeaf(item.children, l);\n      } else if (l < 1) {\n        item.isLeaf = true;\n      }\n    });\n  };\n  loopLeaf(treeData, level + 1);\n}\n\nfunction getNewTreeData(treeData, curKey, child, level) {\n  const loop = (data) => {\n    if (level < 1 || curKey.length - 3 > level * 2) return;\n    data.forEach((item) => {\n      if (curKey.indexOf(item.key) === 0) {\n        if (item.children) {\n          loop(item.children);\n        } else {\n          item.children = child;\n        }\n      }\n    });\n  };\n  loop(treeData);\n  setLeaf(treeData, curKey, level);\n}\n\nclass Demo extends React.Component {\n  state = {\n    treeData: [],\n    checkedKeys: [],\n  };\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        treeData: [\n          { name: 'pNode 01', key: '0-0' },\n          { name: 'pNode 02', key: '0-1' },\n          { name: 'pNode 03', key: '0-2', isLeaf: true },\n        ],\n        checkedKeys: ['0-0'],\n      });\n    }, 100);\n  }\n  onSelect = (info) => {\n    console.log('selected', info);\n  }\n  onCheck = (checkedKeys) => {\n    console.log(checkedKeys);\n    this.setState({\n      checkedKeys,\n    });\n  }\n  onLoadData = (treeNode) => {\n    console.log('load data...');\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const treeData = [...this.state.treeData];\n        getNewTreeData(treeData, treeNode.props.eventKey, generateTreeNodes(treeNode), 2);\n        this.setState({ treeData });\n        resolve();\n      }, 500);\n    });\n  }\n  render() {\n    const loop = (data) => {\n      return data.map((item) => {\n        if (item.children) {\n          return <TreeNode title={item.name} key={item.key}>{loop(item.children)}</TreeNode>;\n        }\n        return (\n          <TreeNode title={item.name} key={item.key} isLeaf={item.isLeaf}\n            disabled={item.key === '0-0-0'}\n          />\n        );\n      });\n    };\n    const treeNodes = loop(this.state.treeData);\n    return (\n      <div>\n        <h2>dynamic render</h2>\n        <Tree\n          onSelect={this.onSelect}\n          checkable onCheck={this.onCheck} checkedKeys={this.state.checkedKeys}\n          loadData={this.onLoadData}\n        >\n          {treeNodes}\n        </Tree>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Demo />, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/dynamic.js","\"use strict\";\n\nexports.__esModule = true;\n\nvar _from = require(\"../core-js/array/from\");\n\nvar _from2 = _interopRequireDefault(_from);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return (0, _from2.default)(arr);\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_babel-runtime@6.26.0@babel-runtime/helpers/toConsumableArray.js\n// module id = 39\n// module chunks = 2 3 9"],"sourceRoot":""}